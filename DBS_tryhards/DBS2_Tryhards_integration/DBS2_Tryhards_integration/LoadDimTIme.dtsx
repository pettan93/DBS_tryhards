<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/21/2018 11:19:23 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="R16"
  DTS:CreatorName="R16\Pettan-Desktop"
  DTS:DTSID="{710DB0D7-ED55-4DF5-A9E2-7F19A3F4C66D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3008.28"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadDimTime"
  DTS:PackageType="5"
  DTS:VersionBuild="9"
  DTS:VersionGUID="{06543ABC-B458-40AC-A6C8-EAEFD1F0685F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task | Create DimTime"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C253B733-B18F-48C0-981B-A1FC4F1A1A2C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task | Create DimTime"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017; © 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F6BE3F8D-211D-4866-BBF1-1A7C5152E56D}"
          SQLTask:SqlStatementSource="IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'timeData')&#xA;BEGIN&#xA;DROP table timeData;&#xA;END&#xA;&#xA;CREATE TABLE [dbo].[timeData]( &#xA;[TimeID] [bigint] NOT NULL, &#xA;[TimeAltKey] [int] NOT NULL, &#xA;[Time30] [varchar](8) NOT NULL, &#xA;[Hour30] [tinyint] NOT NULL, &#xA;[MinuteNumber] [tinyint] NOT NULL, &#xA;[SecondNumber] [tinyint] NOT NULL, &#xA;[TimeInSecond] [int] NOT NULL, &#xA;[HourlyBucket] varchar(15)not null, &#xA;[DayTimeBucketGroupKey] int not null, &#xA;[DayTimeBucket] varchar(100) not null )&#xA;GO&#xA;SET ANSI_PADDING OFF &#xA;GO &#xA;/***** Create Stored procedure In Test_DW and Run SP To Fill Time Dimension with Values****/ &#xA;SET ANSI_NULLS ON &#xA;GO &#xA;SET QUOTED_IDENTIFIER ON &#xA;GO &#xA;BEGIN &#xA;--Specify Total Number of Hours You need to fill in Time Dimension &#xA;DECLARE @Size INTEGER &#xA;--iF @Size=32 THEN This will Fill values Upto 32:59 hr in Time Dimension &#xA;Set @Size=23 &#xA;DECLARE @hour INTEGER &#xA;DECLARE @minute INTEGER &#xA;DECLARE @second INTEGER &#xA;DECLARE @k INTEGER &#xA;DECLARE @TimeAltKey INTEGER &#xA;DECLARE @TimeInSeconds INTEGER &#xA;DECLARE @Time30 varchar(25) &#xA;DECLARE @Hour30 varchar(4) &#xA;DECLARE @Minute30 varchar(4) &#xA;DECLARE @Second30 varchar(4) &#xA;DECLARE @HourBucket varchar(15) &#xA;DECLARE @HourBucketGroupKey int &#xA;DECLARE @DayTimeBucket varchar(100) &#xA;DECLARE @DayTimeBucketGroupKey int &#xA;SET @hour = 0 &#xA;SET @minute = 0 &#xA;SET @second = 0 &#xA;SET @k = 0 &#xA;SET @TimeAltKey = 0 &#xA;WHILE(@hour&lt;= @Size ) &#xA;BEGIN &#xA;if (@hour &lt;10 ) &#xA;begin &#xA;set @Hour30 = '0' + cast( @hour as varchar(10)) &#xA;end &#xA;else &#xA;begin &#xA;set @Hour30 = @hour &#xA;end &#xA;--Create Hour Bucket Value &#xA;set @HourBucket= @Hour30+':00' +'-' +@Hour30+':59' &#xA;WHILE(@minute &lt;= 59) &#xA;BEGIN &#xA;WHILE(@second &lt;= 59) &#xA;BEGIN &#xA;set @TimeAltKey = @hour *10000 +@minute*100 +@second &#xA;set @TimeInSeconds =@hour * 3600 + @minute *60 +@second &#xA;If @minute &lt;10 &#xA;begin &#xA;set @Minute30 = '0' + cast ( @minute as varchar(10) ) &#xA;end &#xA;else &#xA;begin &#xA;set @Minute30 = @minute &#xA;end &#xA;if @second &lt;10 &#xA;begin &#xA;set @Second30 = '0' + cast ( @second as varchar(10) ) &#xA;end &#xA;else &#xA;begin &#xA;set @Second30 = @second &#xA;end &#xA;--Concatenate values for Time30 &#xA;set @Time30 = @Hour30 +':'+@Minute30 +':'+@Second30 &#xA;--DayTimeBucketGroupKey can be used in Sorting of DayTime Bucket In proper Order &#xA;SELECT @DayTimeBucketGroupKey = &#xA;CASE &#xA;WHEN (@TimeAltKey &gt;= 00000 AND @TimeAltKey &lt;= 25959) THEN 0 &#xA;WHEN (@TimeAltKey &gt;= 30000 AND @TimeAltKey &lt;= 65959) THEN 1 &#xA;WHEN (@TimeAltKey &gt;= 70000 AND @TimeAltKey &lt;= 85959) THEN 2 &#xA;WHEN (@TimeAltKey &gt;= 90000 AND @TimeAltKey &lt;= 115959) THEN 3 &#xA;WHEN (@TimeAltKey &gt;= 120000 AND @TimeAltKey &lt;= 135959)THEN 4 &#xA;WHEN (@TimeAltKey &gt;= 140000 AND @TimeAltKey &lt;= 155959)THEN 5 &#xA;WHEN (@TimeAltKey &gt;= 50000 AND @TimeAltKey &lt;= 175959) THEN 6 &#xA;WHEN (@TimeAltKey &gt;= 180000 AND @TimeAltKey &lt;= 235959)THEN 7 &#xA;WHEN (@TimeAltKey &gt;= 240000) THEN 8 &#xA;END &#xA;--print @DayTimeBucketGroupKey &#xA;-- DayTimeBucket Time Divided in Specific Time Zone &#xA;-- So Data can Be Grouped as per Bucket for Analyzing as per time of day &#xA;SELECT @DayTimeBucket = &#xA;CASE &#xA;WHEN (@TimeAltKey &gt;= 00000 AND @TimeAltKey &lt;= 25959) THEN 'Late Night (00:00 AM To 02:59 AM)' &#xA;WHEN (@TimeAltKey &gt;= 30000 AND @TimeAltKey &lt;= 65959) THEN 'Early Morning(03:00 AM To 6:59 AM)' &#xA;WHEN (@TimeAltKey &gt;= 70000 AND @TimeAltKey &lt;= 85959) THEN 'AM Peak (7:00 AM To 8:59 AM)' &#xA;WHEN (@TimeAltKey &gt;= 90000 AND @TimeAltKey &lt;= 115959) THEN 'Mid Morning (9:00 AM To 11:59 AM)' &#xA;WHEN (@TimeAltKey &gt;= 120000 AND @TimeAltKey &lt;= 135959) THEN 'Lunch (12:00 PM To 13:59 PM)' &#xA;WHEN (@TimeAltKey &gt;= 140000 AND @TimeAltKey &lt;= 155959)THEN 'Mid Afternoon (14:00 PM To 15:59 PM)' &#xA;WHEN (@TimeAltKey &gt;= 50000 AND @TimeAltKey &lt;= 175959)THEN 'PM Peak (16:00 PM To 17:59 PM)' &#xA;WHEN (@TimeAltKey &gt;= 180000 AND @TimeAltKey &lt;= 235959)THEN 'Evening (18:00 PM To 23:59 PM)' &#xA;WHEN (@TimeAltKey &gt;= 240000) THEN 'Previous Day Late Night (24:00 PM to '+cast( @Size as varchar(10)) +':00 PM )' &#xA;END &#xA;-- print @DayTimeBucket &#xA;INSERT into TimeData (TimeID,TimeAltKey,[Time30] ,[Hour30] ,[MinuteNumber],[SecondNumber],[TimeInSecond],[HourlyBucket],DayTimeBucketGroupKey,DayTimeBucket) &#xA;VALUES (@k,@TimeAltKey ,@Time30 ,@hour ,@minute,@Second , @TimeInSeconds,@HourBucket,@DayTimeBucketGroupKey,@DayTimeBucket ) &#xA;SET @second = @second + 1 &#xA;SET @k = @k + 1 &#xA;END &#xA;SET @minute = @minute + 1 &#xA;SET @second = 0 &#xA;END &#xA;SET @hour = @hour + 1 &#xA;SET @minute =0 &#xA;END &#xA;END &#xA;Go &#xA;&#xA;IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'DimTime')&#xA;BEGIN&#xA;DROP table DimTime;&#xA;END&#xA;&#xA;DECLARE @i INT;&#xA;SET @i = 0;&#xA;WHILE (@i &lt; 25)&#xA;  BEGIN&#xA;&#xA;  &#x9;&#x9;IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'DimTime')&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;  INSERT INTO DimTime&#xA;&#x9;&#x9;  SELECT TOP 1 *&#xA;&#x9;&#x9;  FROM TimeData&#xA;&#x9;&#x9;  WHERE Hour30 = @i&#xA;&#x9;&#x9;END&#xA;&#xA;  &#x9;&#x9;IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = N'DimTime')&#xA;&#x9;&#x9;BEGIN&#xA;&#x9;&#x9;&#x9;SELECT TOP 1 *&#xA;&#x9;&#x9;&#x9;INTO DimTime&#xA;&#x9;&#x9;&#x9;FROM TimeData&#xA;&#x9;&#x9;&#x9;WHERE Hour30 = @i&#xA;&#x9;&#x9;END&#xA;&#xA;&#xA;  SET @i = @i + 1;&#xA;END&#xA;&#xA;ALTER table DimTime&#xA;ADD PRIMARY KEY(TimeID);&#xA;&#xA;DROP table timeData&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="250,42"
          Id="Package\Execute SQL Task | Create DimTime"
          TopLeft="430,121" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>
<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/16/2018 7:24:23 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="R16"
  DTS:CreatorName="R16\Pettan-Desktop"
  DTS:DTSID="{BAD284D3-DBCE-464B-A1F3-FC934ECEAE75}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.3008.28"
  DTS:LocaleID="1033"
  DTS:ObjectName="LoadDimDate"
  DTS:PackageType="5"
  DTS:VersionBuild="22"
  DTS:VersionGUID="{497F8ABB-D119-4A76-95F7-EC05B54BD301}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[127.0.0.1.tryhards 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{EE0B748F-ED80-40DD-BCD2-A87A0F23DA54}"
      DTS:ObjectName="127.0.0.1.tryhards 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=127.0.0.1;Initial Catalog=tryhards;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8BAA894A-513A-4A4C-85A5-DBDE0F7D65AA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2017; Â© 2017 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F6BE3F8D-211D-4866-BBF1-1A7C5152E56D}"
          SQLTask:SqlStatementSource="DELETE FROM [dbo].[DimDate];&#xA;&#xA;DBCC CHECKIDENT ('[dbo].[DimDate]', RESEED, 0);&#xA;&#xA;/********************************************************************************************/&#xA;--Specify Start Date and End date here&#xA;--Value of Start Date Must be Less than Your End Date &#xA;&#xA;DECLARE @StartDate DATETIME = '2016-01-01' --Starting value of Date Range&#xA;DECLARE @EndDate DATETIME = '2017-12-31' --End Value of Date Range&#xA;&#xA;--Temporary Variables To Hold the Values During Processing of Each Date of Year&#xA;DECLARE&#xA;&#x9;@DayOfWeekInMonth INT,&#xA;&#x9;@DayOfWeekInYear INT,&#xA;&#x9;@DayOfQuarter INT,&#xA;&#x9;@WeekOfMonth INT,&#xA;&#x9;@CurrentYear INT,&#xA;&#x9;@CurrentMonth INT,&#xA;&#x9;@CurrentQuarter INT&#xA;&#xA;/*Table Data type to store the day of week count for the month and year*/&#xA;DECLARE @DayOfWeek TABLE (DOW INT, MonthCount INT, QuarterCount INT, YearCount INT)&#xA;&#xA;INSERT INTO @DayOfWeek VALUES (1, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (2, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (3, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (4, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (5, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (6, 0, 0, 0)&#xA;INSERT INTO @DayOfWeek VALUES (7, 0, 0, 0)&#xA;&#xA;--Extract and assign various parts of Values from Current Date to Variable&#xA;&#xA;DECLARE @CurrentDate AS DATETIME = @StartDate&#xA;SET @CurrentMonth = DATEPART(MM, @CurrentDate)&#xA;SET @CurrentYear = DATEPART(YY, @CurrentDate)&#xA;SET @CurrentQuarter = DATEPART(QQ, @CurrentDate)&#xA;&#xA;/********************************************************************************************/&#xA;--Proceed only if Start Date(Current date ) is less than End date you specified above&#xA;&#xA;WHILE @CurrentDate &lt; @EndDate&#xA;BEGIN&#xA; &#xA;/*Begin day of week logic*/&#xA;&#xA;         /*Check for Change in Month of the Current date if Month changed then &#xA;          Change variable value*/&#xA;&#x9;IF @CurrentMonth != DATEPART(MM, @CurrentDate) &#xA;&#x9;BEGIN&#xA;&#x9;&#x9;UPDATE @DayOfWeek&#xA;&#x9;&#x9;SET MonthCount = 0&#xA;&#x9;&#x9;SET @CurrentMonth = DATEPART(MM, @CurrentDate)&#xA;&#x9;END&#xA;&#xA;        /* Check for Change in Quarter of the Current date if Quarter changed then change &#xA;         Variable value*/&#xA;&#xA;&#x9;IF @CurrentQuarter != DATEPART(QQ, @CurrentDate)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;UPDATE @DayOfWeek&#xA;&#x9;&#x9;SET QuarterCount = 0&#xA;&#x9;&#x9;SET @CurrentQuarter = DATEPART(QQ, @CurrentDate)&#xA;&#x9;END&#xA;       &#xA;        /* Check for Change in Year of the Current date if Year changed then change &#xA;         Variable value*/&#xA;&#xA;&#xA;&#x9;IF @CurrentYear != DATEPART(YY, @CurrentDate)&#xA;&#x9;BEGIN&#xA;&#x9;&#x9;UPDATE @DayOfWeek&#xA;&#x9;&#x9;SET YearCount = 0&#xA;&#x9;&#x9;SET @CurrentYear = DATEPART(YY, @CurrentDate)&#xA;&#x9;END&#xA;&#x9;&#xA;        -- Set values in table data type created above from variables &#xA;&#xA;&#x9;UPDATE @DayOfWeek&#xA;&#x9;SET &#xA;&#x9;&#x9;MonthCount = MonthCount + 1,&#xA;&#x9;&#x9;QuarterCount = QuarterCount + 1,&#xA;&#x9;&#x9;YearCount = YearCount + 1&#xA;&#x9;WHERE DOW = DATEPART(DW, @CurrentDate)&#xA;&#xA;&#x9;SELECT&#xA;&#x9;&#x9;@DayOfWeekInMonth = MonthCount,&#xA;&#x9;&#x9;@DayOfQuarter = QuarterCount,&#xA;&#x9;&#x9;@DayOfWeekInYear = YearCount&#xA;&#x9;FROM @DayOfWeek&#xA;&#x9;WHERE DOW = DATEPART(DW, @CurrentDate)&#xA;&#x9;&#xA;/*End day of week logic*/&#xA;&#xA;&#xA;/* Populate Your Dimension Table with values*/&#xA;&#x9;&#xA;&#x9;INSERT INTO [dbo].[DimDate]&#xA;&#x9;SELECT&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;@CurrentDate AS Date,&#xA;&#xA;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;WHEN (MONTH(@CurrentDate) &gt;= 3 AND DAY(@CurrentDate) &gt;= 1) AND (MONTH(@CurrentDate) &lt;= 5 AND DAY(@CurrentDate) &lt;= 31) THEN&#xA;&#x9;&#x9;&#x9;'Spring'&#xA;&#x9;&#x9;WHEN (MONTH(@CurrentDate) &gt;= 6 AND DAY(@CurrentDate) &gt;= 1) AND (MONTH(@CurrentDate) &lt;= 8 AND DAY(@CurrentDate) &lt;= 31) THEN&#xA;&#x9;&#x9;&#x9;'Summer'&#xA;&#x9;&#x9;WHEN (MONTH(@CurrentDate) &gt;= 9 AND DAY(@CurrentDate) &gt;= 1) AND (MONTH(@CurrentDate) &lt;= 11 AND DAY(@CurrentDate) &lt;= 31) THEN&#xA;&#x9;&#x9;&#x9;'Autumn'&#xA;&#x9;&#x9;WHEN (MONTH(@CurrentDate) &gt;= 12 AND DAY(@CurrentDate) &gt;= 1) AND (MONTH(@CurrentDate) &lt;= 2 AND DAY(@CurrentDate) &lt;= 28) THEN&#xA;&#x9;&#x9;&#x9;'Winter'&#xA;&#x9;&#x9;ELSE&#xA;&#x9;&#x9;&#x9;'Winter'&#xA;&#x9;&#x9;END AS Season,&#xA;&#xA;&#x9;&#x9;&#xA;&#x9;&#xA;&#x9;&#x9;CONVERT (char(10),@CurrentDate,104) as FormattedDate,&#xA;&#x9;&#x9;DATEPART(DD, @CurrentDate) AS DayOfMonth,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DATENAME(DW, @CurrentDate) AS DayName,&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;@DayOfWeekInMonth AS DayOfWeekInMonth,@DayOfWeekInYear AS DayOfWeekInYear,@DayOfQuarter AS DayOfQuarter,DATEPART(DY, @CurrentDate) AS DayOfYear,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DATEPART(WW, @CurrentDate) + 1 - DATEPART(WW, CONVERT(VARCHAR,DATEPART(MM, @CurrentDate)) + '/1/' + CONVERT(VARCHAR, DATEPART(YY, @CurrentDate))) AS WeekOfMonth,(DATEDIFF(DD, DATEADD(QQ, DATEDIFF(QQ, 0, @CurrentDate), 0), @CurrentDate) / 7) + 1 AS WeekOfQuarter,DATEPART(WW, @CurrentDate) AS WeekOfYear,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DATEPART(MM, @CurrentDate) AS Month,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DATENAME(MM, @CurrentDate) AS MonthName,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;WHEN DATEPART(MM, @CurrentDate) IN (1, 4, 7, 10) THEN 1&#xA;&#x9;&#x9;&#x9;WHEN DATEPART(MM, @CurrentDate) IN (2, 5, 8, 11) THEN 2&#xA;&#x9;&#x9;&#x9;WHEN DATEPART(MM, @CurrentDate) IN (3, 6, 9, 12) THEN 3&#xA;&#x9;&#x9;&#x9;END AS MonthOfQuarter,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DATEPART(QQ, @CurrentDate) AS Quarter,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;CASE DATEPART(QQ, @CurrentDate)&#xA;&#x9;&#x9;&#x9;WHEN 1 THEN 'First'&#xA;&#x9;&#x9;&#x9;WHEN 2 THEN 'Second'&#xA;&#x9;&#x9;&#x9;WHEN 3 THEN 'Third'&#xA;&#x9;&#x9;&#x9;WHEN 4 THEN 'Fourth'&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;END AS QuarterName,&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DATEPART(YEAR, @CurrentDate) AS Year,&#xA;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;CASE DATEPART(DW, @CurrentDate)&#xA;&#x9;&#x9;&#x9;WHEN 1 THEN 'No'&#xA;&#x9;&#x9;&#x9;WHEN 2 THEN 'Yes'&#xA;&#x9;&#x9;&#x9;WHEN 3 THEN 'Yes'&#xA;&#x9;&#x9;&#x9;WHEN 4 THEN 'Yes'&#xA;&#x9;&#x9;&#x9;WHEN 5 THEN 'Yes'&#xA;&#x9;&#x9;&#x9;WHEN 6 THEN 'Yes'&#xA;&#x9;&#x9;&#x9;WHEN 7 THEN 'No'&#xA;&#x9;&#x9;&#x9;end AS IsWeekday&#xA;&#x9;&#xA;&#x9;SET @CurrentDate = DATEADD(DD, 1, @CurrentDate)&#xA;END&#xA;&#xA;&#xA;SELECT * FROM [dbo].[DimDate]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Execute SQL Task"
          TopLeft="459,237" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>